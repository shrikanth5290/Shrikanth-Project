import cv2
import face_recognition
import numpy as np

video=cv2.VideoCapture(0)

known_face_encoding = []
known_face_names = []

imgshri = face_recognition.load_image_file("C:/Users/SHRIKANTH/Downloads/shri.jpg")
imgshriencoding = face_recognition.face_encodings(imgshri)[0]

imgdowney= face_recognition.load_image_file("C:/Users/SHRIKANTH/Downloads/downey.jpg")
imgdowneyencoding = face_recognition.face_encodings(imgdowney)[0]

imghugh = face_recognition.load_image_file("C:/Users/SHRIKANTH/Desktop/test.png")
imghughencoding = face_recognition.face_encodings(imghugh)[0]

known_face_encodings = [imgshriencoding,imgdowneyencoding,imghughencoding]

known_face_names = ['Shrikanth','Downey','Hugh']

face_locations = []
face_encodings = []
face_names = []
process_this_frame = True

i=0
while True:
    ret, frame=video.read()
    small_frame = cv2.resize(frame,(0,0),fx=0.5,fy=0.5)
    if process_this_frame:

        face_locations = face_recognition.face_locations(small_frame)
        face_encodings = face_recognition.face_encodings(small_frame,face_locations)
        face_names = []

        for face_encoding in face_encodings:

            matches = face_recognition.compare_faces(known_face_encodings, face_encoding, tolerance=0.5)
            face_distances = face_recognition.face_distance(known_face_encodings,face_encoding)
            best_match_index = np.argmin(face_distances)

            if matches[best_match_index]:
                name = known_face_names[best_match_index]
                face_names.append(name)


    i+=1
    if i==5:
        curr_name = name
        print(curr_name)

    if len(face_names)==0:
        i=0

    process_this_frame = not process_this_frame

    for (top,right,bottom,left), name in zip(face_locations,face_names):
        top*=2
        right*=2
        bottom*=2
        left*=2

        cv2.rectangle(frame,(left,top),(right,bottom),(255,0,0),3)
        cv2.rectangle(frame,(left,bottom-35),(right,bottom),(255,0,0),cv2.FILLED)
        font =  cv2.FONT_HERSHEY_DUPLEX
        cv2.putText(frame,name,(left+6,bottom-6),font,1.0,(255,255,255),1)

    cv2.imshow('video',frame)
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

video.release()
cv2.destroyAllWindows()


